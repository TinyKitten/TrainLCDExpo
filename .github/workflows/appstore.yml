name: Deploy to TestFlight

on:
  push:
    branches:
      # - release/**
      - '**' # テスト用

jobs:
  build:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v1
      - name: Cache npm
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.cache-version }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-version }}-npm-
      - run: npm install
      - uses: actions/cache@v1
        with:
          path: Pods
          key: ${{ runner.os }}-${{ env.cache-version }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-version }}-pods-
      - name: Pod Install
        if: steps.cache-cocoapods.outputs.cache-hit != 'true'
        run: cd ios && pod install && cd ..
      - name: Setup SSH Keys and known_hosts for fastlane match
        run: |
          SSH_PATH="$HOME/.ssh"

          mkdir -p "$SSH_PATH"
          touch "$SSH_PATH/known_hosts"

          echo "$PRIVATE_KEY" > "$SSH_PATH/id_rsa"

          chmod 700 "$SSH_PATH"
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          chmod 600 "$SSH_PATH/known_hosts"
          chmod 600 "$SSH_PATH/id_rsa"

          eval $(ssh-agent)
          ssh-add "$SSH_PATH/id_rsa"
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: bundle install
        run: cd android && bundle install
      - name: Run Fastlane - Deploy to TestFlight
        run: cd ios && bundle exec fastlane deploy
        env:
          APP_IDENTIFIER: ${{ secrets.APP_IDENTIFIER }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          ITC_TEAM_ID: ${{ secrets.ITC_TEAM_ID }}
          TEAM_ID: ${{ secrets.TEAM_ID }}
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
