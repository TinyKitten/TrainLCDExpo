# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  def increment_version_code(gradle_build: 'app/build.gradle')
    sh %Q{cd ../ && echo "$(awk '{sub(/versionCode [[:digit:]]+$/,"versionCode "$2+10)}1' #{gradle_build})" > #{gradle_build} && cd -}
  end

  def increment_wearable_version_code(gradle_build: 'wearable/build.gradle.kts')
    sh %Q{cd ../ && echo "$(awk '{sub(/versionCode \\= [[:digit:]]+$/,"versionCode \\=\s"$3+10)}1' #{gradle_build})" > #{gradle_build} && cd -}
  end

  desc "Bump version number"
  lane :bump_version do
    increment_version_code()
    increment_wearable_version_code()
  end

  lane :deploy do
    gradle(
      task: "bundle",
      build_type: "prodRelease",
      print_command: false,
      properties: {
        "android.injected.signing.store.file" => ENV["SIGNING_STORE_FILE"],
        "android.injected.signing.store.password" => ENV["SIGNING_STORE_PASSWORD"],
        "android.injected.signing.key.alias" => ENV["SIGNING_KEY_ALIAS"],
        "android.injected.signing.key.password" => ENV["SIGNING_KEY_PASSWORD"],
      }
    )
    upload_to_play_store(
      track: "internal",
      aab_paths: [
        "app/build/outputs/bundle/prodRelease/app-prod-release.aab",
      ],
      skip_upload_apk: true,
      skip_upload_screenshots: true,
      skip_upload_metadata: true,
      skip_upload_changelogs: true
    )
    upload_to_play_store(
      track: "wear:internal",
      aab_paths: [
        "wearable/build/outputs/bundle/prodRelease/wearable-prod-release.aab"
      ],
      skip_upload_apk: true,
      skip_upload_screenshots: true,
      skip_upload_metadata: true,
      skip_upload_changelogs: true
    )
  end

  desc "Deploy a development build to App Distribution"
  lane :deploy_dev do
    gradle(
      task: "assemble",
      build_type: "devRelease",
      print_command: false,
      properties: {
        "android.injected.signing.store.file" => ENV["SIGNING_STORE_FILE"],
        "android.injected.signing.store.password" => ENV["SIGNING_STORE_PASSWORD"],
        "android.injected.signing.key.alias" => ENV["SIGNING_KEY_ALIAS"],
        "android.injected.signing.key.password" => ENV["SIGNING_KEY_PASSWORD"],
      }
    )
    firebase_app_distribution(
      app: ENV["FIREBASE_APP_ID"],
      groups: ENV["FIREBASE_AD_TESTERS"]
    )
  end
end
